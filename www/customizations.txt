// DON'T install cordova-plugin-purchase on Android if you plan to submit to the Android App Store
npm install -g plugman
plugman install --platform ios --plugin cordova-plugin-purchase --project platforms/ios


=== IOS CUSTOMIZATIONS ===
WKWEBVIEW SEE https://cordova.apache.org/howto/2020/03/18/wkwebviewonly.html
in platforms/ios/CoughDrop/Plugins/cordova-labs-local-webserver/CDVLocalWebServer.m
- set cacheAge:0 to cacheAge:86400 for all instances except under addAppFileSystemHandler


in CanvasCamera.js comment out this line: // this.image.crossOrigin = 'Anonymous';


https://github.com/apache/cordova-plugin-media-capture/pull/185/files

add frameworks/libraries:
- AssetsLibrary.framework
- AudioToolbox.framework
- libsqlite3.dylib
- libz.*.tbd
Build Phases -> Link Binary With Libraries
- make CoreNFC optional

get ZipFileDownloader re-added
    - add the folder to as a group to XCode
get acap files re-added
    - copy acap folder to platforms/ios, make a TTS folder/group in XCode, add all the acap files individually

CDVTTS.m:
- (void)speak:(CDVInvokedUrlCommand*)command {
    ...
    NSString* target = [options objectForKey:@"target"];
    if (@available(iOS 13.0, *)) {
        // iOS 13 feature that allows sending TTS content through the active call
        if ([target isEqualToString:@"call"]) {
            synthesizer.mixToTelephonyUplink = true;
        } else {
            synthesizer.mixToTelephonyUplink = false;
        }
    }    

    AVSpeechUtterance* utterance = [[AVSpeechUtterance new] initWithString:text];
    if(ident != nil) {
        utterance.voice = [AVSpeechSynthesisVoice voiceWithIdentifier:ident];
    } else {
        utterance.voice = [AVSpeechSynthesisVoice voiceWithLanguage:locale];
    }

- (void)checkLanguage:(CDVInvokedUrlCommand *)command {
    ...
    NSString* ident = [options objectForKey:@"id"];
    for (id voiceName in voices) {
        languages = [languages stringByAppendingString:@","];
        languages = [languages stringByAppendingString:[voiceName valueForKey:@"language"]];
        languages = [languages stringByAppendingString:@":"];
        languages = [languages stringByAppendingString:[voiceName valueForKey:@"identifier"]];
    }


=== ANDROID CUSTOMIZATIONS ===
copy splash screen images from www/assets/splash
to platforms/android/res

copy build-extras.gradle to platforms/android

check that icons all got copied correctly

open platforms/android/src/org/apache/cordova/splashscreen/SplashScreen.java
comment out this.removeSplashScreen();
... for onPause? or onDestroy?

copy .jar for acapela to platforms/android/app/libs
copy folders with .so files for acapela to platforms/android/app/src/main/jniLibs

build.gradle
    // build was hanging on app:lintVitalRelease
    lintOptions {
      abortOnError false;
      checkReleaseBuilds false;
    }

(this will go away when you update to cordova-android 10)
./platforms/android/CordovaLib/src/org/apache/cordova/engine/SystemWebViewEngine.java
private void initWebViewSettings() {
        ...

        settings.setSavePassword(false); // (after this, paste)

        if (preferences.getBoolean("AndroidInsecureFileModeEnabled", false)) {
            //These settings are deprecated and loading content via file:// URLs is generally discouraged,
            //but we allow this for compatibility reasons
            LOG.d(TAG, "Enabled insecure file access");
            settings.setAllowFileAccess(true);
            settings.setAllowUniversalAccessFromFileURLs(true);
        }



AndroidManifest.xml
    <uses-feature android:name="android.hardware.nfc" android:required="false" />
    <uses-feature android:name="android.hardware.camera" android:required="false" />
    <uses-feature android:name="android.hardware.microphone" android:required="false" />
    <uses-feature android:name="android.hardware.location" android:required="false" />
    <uses-feature android:name="android.hardware.location.gps" android:required="false" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" android:required="false" />
    <uses-permission android:name="android.permission.WAKE_LOCK" android:required="false" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:required="false" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" android:required="false" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" android:required="false" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" android:required="false" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" android:required="false" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" android:required="false" />
    <uses-permission android:name="android.permission.RECORD_VIDEO" android:required="false" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:required="false" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" android:required="false" />
    <uses-permission android:name="com.android.vending.BILLING" android:required="false" />
    <uses-permission android:name="android.permission.VIBRATE" android:required="false" />
    <uses-permission android:name="android.permission.NFC" android:required="false" />
    <uses-permission android:name="android.permission.EXTERNAL_STORAGE" android:required="false" />
    <uses-permission android:name="android.permission.CAMERA" android:required="false" />
    <uses-permission android:name="android.webkit.PERMISSIONREQUEST" android:required="false" />
    (you may have to manually modify android.json to get the required=false to stick and to add missing permissions)

global search for JavaVersion.VERSION_1 => needs to be JavaVersion.VERSION_1_8

build.gradle
    if (false) { //Boolean.valueOf(cdvBuildMultipleApks)) {
        productFlavors {
            armv7 {
                versionCode defaultConfig.versionCode*10 + 2
                ndk {
                    abiFilters "armeabi-v7a", ""
                }
            }
            x86 {
                versionCode defaultConfig.versionCode*10 + 4
                ndk {
                    abiFilters "x86", ""
                }
            }
            all {
                ndk {
                    abiFilters "all", ""
                }
            }
        }
    }
    else if (!cdvVersionCode) {
      def minSdkVersion = cdvMinSdkVersion ?: privateHelpers.extractIntFromManifest("minSdkVersion")
      // Vary versionCode by the two most common API levels:
      // 14 is ICS, which is the lowest API level for many apps.
      // 20 is Lollipop, which is the lowest API level for the updatable system webview.
      if (minSdkVersion >= 20) {
        defaultConfig.versionCode = defaultConfig.versionCode*10 + 9
      } else if (minSdkVersion >= 14) {
        defaultConfig.versionCode = defaultConfig.versionCode*10 + 8
      }
    }

=== PUBLISHING ===
ios
cordova prepare
in XCode, Project -> Archive, Upload to App Store

android
bin/build_android

=== PLUGINS ===
com.mycoughdrop.coughdrop.extra-tts 0.0.1 "ExtraTTS"
com.mycoughdrop.coughdrop.misc 0.0.1 "CoughDropMisc"
com.mycoughdrop.coughdrop.face 0.0.1 "CoughDropFace"
com.vlara.aboutscreen 0.0.1 "AboutScreen"
cordova-plugin-android-permissions 1.0.0 "Permissions"
cordova-plugin-app-launcher 0.4.0 "Launcher"
cordova-plugin-battery-status 2.0.3 "Battery"
cordova-plugin-blob-constructor-polyfill 1.0.2 "Blob constructor shim"
cordova-plugin-brightness 0.1.5 "Brightness"
cordova-plugin-chrome-apps-power 1.0.4 "Chrome Apps Power API"
cordova-plugin-compat 1.2.0 "Compat"
cordova-plugin-device 1.1.7 "Device"
cordova-plugin-file 4.3.3 "File"
cordova-plugin-geolocation 4.0.2-dev "Geolocation"
cordova-plugin-inappbrowser 1.1.1 "InAppBrowser"
cordova-plugin-ios-disableshaketoedit 1.0.0 "iOS Disable Shake to Edit"
cordova-plugin-keyboard 1.1.5 "Keyboard"
cordova-plugin-media 3.0.1 "Media"
cordova-plugin-media-capture 1.4.3 "Capture"
cordova-plugin-network-information 1.3.4 "Network Information"
cordova-plugin-purchase 8.1.1 "Purchase"
cordova-plugin-settings-hook 0.2.7 "Cordova Settings Hooks"
cordova-plugin-shared-preferences 0.0.1 "Cordova Plugin for Android SharedPreferences"
cordova-plugin-splashscreen 5.0.2 "Splashscreen"
cordova-plugin-statusbar 2.4.2 "StatusBar"
cordova-plugin-tts 0.2.3 "TTS"
cordova-plugin-vibration 3.1.1 "Vibration"
cordova-plugin-whitelist 1.3.3 "Whitelist"
cordova-plugin-x-socialsharing 5.4.4 "SocialSharing"
cordova-plugin-xhr-blob-polyfill 1.0.3 "XHR Blob Response Type Polyfill"
cordova-sqlite-storage 3.2.0 "Cordova sqlite storage plugin - cordova-sqlite-storage plugin version"
de.codevise.cordova.volume 0.0.1 "Volume"
es6-promise-plugin 4.2.2 "Promise"
fr.pierrickrouxel.cordova.plugin.iCloudKV 0.3.0 "iCloudKV"
nl.x-services.plugins.backgroundaudio 1.0.1 "BackgroundAudio"
phonegap-nfc 1.0.4 "NFC"
phonegap-plugin-speech-synthesis 0.1.1 "SpeechSynthesis"
